source("runnit.r"
)
source("runnit.r")
system("head runnit.r")
source("runnit.r")
source("runnit.r")
source("runnit.r")
dim(freq)
ls()
data = read.table(file="testdata1",colClasses="factor")
freq = as.data.frame(table(data))
data = read.table(file="testdata1",colClasses="factor",skip=6)
freq = as.data.frame(table(data))
dim(freq)
freq[1,]
ls()
rm(data,freq)
source("runnit.r")
source("runnit.r")
source("runnit.r")
q()
source("runnit.r")
q()
rcheck = scan("rcheck")
sum(rcheck)^2/sum(rcheck^2)
max(rcheck)
which(rcheck == max(rcheck)
)
params[915,]
ls()
source("runnit.r")
ls
ls()
hist(log(rcheck))
sum(rcheck)^2/sum(rcheck^2)
sum(rcheck^0.1)^2/sum((rcheck^0.1)^2)
source("runnit.r")
source("runnit.r")
source("runnit.r")
source("runnit.r")
ls()
dim(target)
target
q()
source("scratch1.R")
source("scratch1.R")
source("scratch1.R")
source("scratch1.R")
source("scratch1.R")
source("scratch1.R")
source("scratch1.R")
source("scratch1.R")
source("scratch1.R")
source("scratch1.R")
help(proc.time)
help(system.time)
system.time(source("scratch1.R"))
isss
1/25
source("runnit.r")
guess.mu
guess.sigma
SigmaInv.sum
SigmaInv.mu.sum
print(iter)
ilocus
SigmaInv.mu.cav
SigmaInv.cav
sigma.cav
SigmaInv.mu.cav
as.vector(SigmaInv.mu.cav)
source("runnit.r")
source("runnit.r")
source("runnit.r")
q()
source("runnit.r")
source("runnit.r")
source("runnit.r")
j
q()
source("runnit.r")
q()
source("runnit.r")
ls()
params = read.table("paramfile")
dim(params)
plot(params[,2],params[,3],pch=16,cex=0.3)
sigma.cav
mu.cav
sqrt(0.2)
names(simres)
simres$ess
simres$mu
(Nloci -1)/Nloci
q()
source("runnit.r")
checkparams = read.table("paramfile")
mean(checkparams[,1])
mean(checkparams[,2])
mean(checkparams[,3])
var(checkparams[,1])
var(checkparams[,2])
var(checkparams[,3])
cor(checkparams[,1],checkparams[,2])
cor(checkparams[,1],checkparams[,3])
cor(checkparams[,2],checkparams[,3])
source("runnit.r")
ls()
wvec = simres$wvec; v1 = log(wvec)
ess = sum(exp(v1))^2/sum(exp(v1)^2)
ess
simres$ess
length(v1)
idx = sample(c(1:length(v1)),200,rep=T,prob=exp(v1))
length(table(idx))
theta.vals = params[,1]
r.vals = params[,2]
tf.vals = params[,3]
plot(jitter(r.vals[idx]),jitter(tf.vals[idx]),pch=16,cex=0.3)
sd(r.vals[idx])
var(r.vals[idx])
sum(r.vals*wvec)/sum(wvec)
var(theta.vals)
var(r.vals)
var(tf.vals)
ck 
ck = read.table("paramfile")
var(ck[,1])
var(ck[,2])
var(ck[,3])
theta.vals =simres$params[,1]
r.vals = simres$params[,2]
tf.vals = simres$params[,3]
plot(jitter(r.vals[idx]),jitter(tf.vals[idx]),pch=16,cex=0.3)
sd(r.vals[idx])
var(r.vals[idx])
plot(jitter(r.vals[idx],5),jitter(tf.vals[idx],5),pch=16,cex=0.3)
plot(jitter(r.vals[idx],10),jitter(tf.vals[idx],10),pch=16,cex=0.3)
plot(jitter(r.vals[idx],20),jitter(tf.vals[idx],20),pch=16,cex=0.3)
mean(r.vals[idx])
mean(theta.vals[idx])
est.mu
names(simres)
simres$mu
mean(tf.vals[idx])
simres$sigma
var(tf.vals[idx])
var(theta.vals[idx])
var(r.vals[idx])
params = simres$params
est.mu = sweep(params,1,wvec,"*")
est.mu = apply(est.mu,2,sum)/sum(wvec)
est.mu
sum(theta.vals*wvec)/sum(wvec)
sum(r.vals*wvec)/sum(wvec)
sum(tf.vals*wvec)/sum(wvec)
est.cov = (t(params) %*% diag(wvec) %*% params)/sum(wvec)
est.cov
p.cent = sweep(params,2,est.mu,"-")
head(p.cent)
head(theta.vals -  est.mu[1])
head(r.vals -  est.mu[2])
head(tf.vals -  est.mu[3])
q()
source("runnit.r")
pcheck = simres$params
params = pcheck
apply(params,2,mean)
var(params)
names(simres)
simres$mu
summary(simres$wvec)
simres$ess
v1 = log(simres$wvec)
ess = sum(exp(v1))^2/sum(exp(v1)^2)
ess
idx = sample(c(1:length(v1)),500,rep=T,prob=exp(v1))
length(v1)
length(table(idx))
plot(jitter(params[,2][idx],25),jitter(params[,3][idx],25),pch=16,xlim=c(-6,6),ylim=c(-6,6),cex=0.5)
plot(jitter(params[,1][idx],25),jitter(params[,2][idx],25),pch=16,xlim=c(-6,6),ylim=c(-6,6),cex=0.5)
print il
print(il)
print(ilocus)
print(target)
q()
source("runnit.r")
params = simres$params
apply(params,2,mean)
var(params)
simres$mu
simres$ess
v1 = log(simres$wvec)
ess = sum(exp(v1))^2/sum(exp(v1)^2)
ess
 idx = sample(c(1:length(v1)),100,rep=T,prob=exp(v1))
length(v1)
length(table(idx))
plot(jitter(params[,2][idx],25),jitter(params[,3][idx],25),pch=16,xlim=c(-6,6),ylim=c(-6,6),cex=0.5)
plot(jitter(params[,1][idx],25),jitter(params[,2][idx],25),pch=16,xlim=c(-6,6),ylim=c(-6,6),cex=0.5)
q()
m1 = read.table("postevol.txt")
plot(m1[,2],m1[,3],col=m1[,1])
plot(m1[,2],m1[,4],col=m1[,1])
plot(m1[,2],m1[,5],col=m1[,1])
system("head results.txt")
abline(h=2.303,lwd=2,col="purple")
abline(h=2.303,lwd=2,col=1)
plot(m1[,2],m1[,6],col=m1[,1])
plot(m1[,2],m1[,6],col=ifelse(m1[,1]==12,1,0))
plot(m1[,2],m1[,6],col=ifelse(m1[,1]==11,1,0))
plot(m1[,2],m1[,6],col=m1[,1])
plot(m1[,2],m1[,7],col=m1[,1])
plot(m1[,2],m1[,8],col=m1[,1])
plot(m1[,2],m1[,9],col=m1[,1])
plot(m1[,2],m1[,10],col=m1[,1])
plot(m1[,2],m1[,11],col=m1[,1])
plot(m1[,2],m1[,12],col=m1[,1])
plot(m1[,2],m1[,13],col=m1[,1])
plot(m1[,2],m1[,6],col=m1[,1])
plot(m1[,2],m1[,5],col=m1[,1])
abline(h=2.303,lwd=2,col=1)
plot(m1[,2],m1[,5],col=m1[,1])
plot(m1[,2],m1[,6],col=m1[,1])
plot(m1[,2],m1[,7],col=m1[,1])
plot(m1[,2],m1[,6],col=m1[,1])
plot(m1[,2],m1[,8],col=m1[,1])
plot(m1[,2],m1[,9],col=m1[,1])
plot(m1[,2],m1[,10],col=m1[,1])
sqrt(6)
abline(h=sqrt(6))
plot(m1[,2],m1[,9],col=m1[,1])
abline(h=sqrt(6))
plot(m1[,2],m1[,11],col=m1[,1])
plot(m1[,2],m1[,12],col=m1[,1])
plot(m1[,2],m1[,13],col=m1[,1])
args(numeric)
v1 = numeric(100)
v1
v1 = rep(NA,100)
v1
v1 = 100
for(j in 2:100)v1[j] = v1[j-1]*0.008
v1 = as.integer(v1)
v1
v1 = 100
v1 = rep(NA,100)
v1[1] = 100
for(j in 2:100)v1[j] = v1[j-1]*0.992
v1 = as.integer(v1)
v1
for(j in 2:100)v1[j] = v1[j-1]*0.991
v1 = as.integer(v1)
v1
for(j in 2:100)v1[j] = v1[j-1]*0.99
v1 = as.integer(v1)
v1
for(j in 2:100)v1[j] = v1[j-1]*0.98
v1 = as.integer(v1)
v1
for(j in 2:100)v1[j] = v1[j-1]*0.97
v1 = as.integer(v1)
v1
q()
m1 = read.table("postevol.txt")
plot(m1[,2],m1[,3],col=m1[,1])
plot(m1[,2],m1[,5],col=m1[,1])
abline(h=log(10))
plot(m1[,2],m1[,6],col=m1[,1])
plot(m1[,2],m1[,7],col=m1[,1])
plot(m1[,2],m1[,8],col=m1[,1])
plot(m1[,2],m1[,9],col=m1[,1])
sqrt(6)
plot(m1[,2],m1[,10],col=m1[,1])
ls()
v1
plot(m1[,2],m1[,11],col=m1[,1])
plot(m1[,2],m1[,12],col=m1[,1])
plot(m1[,2],m1[,13],col=m1[,1])
plot(m1[,2],m1[,14],col=m1[,1])
plot(m1[,2],m1[,15],col=m1[,1])
plot(m1[,2],m1[,5],col=m1[,1])
plot(m1[,2],m1[,6],col=m1[,1])
plot(m1[,2],m1[,7],col=m1[,1])
plot(m1[,2],m1[,8],col=m1[,1])
plot(m1[,2],m1[,9],col=m1[,1])
plot(m1[,2],m1[,10],col=m1[,1])
q()
